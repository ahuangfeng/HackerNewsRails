info:
  description: "This is the API documentation for the Hacker News we created"
  version: 0.0.1
  title: "Hacker News - G11D"
swagger: '2.0'
consumes:
  - application/json
produces:
  - application/xml
  - application/json
  - application/octet-stream
  - text/plain
host: localhost:3000 
basePath: "/api/v1"
tags:
  - name: Contributions
    description: "All Contributions REST calls"
  - name: Comments
    description: "All Comments REST calls"
  - name: Users
    description: "All Users REST calls"
schemes:
- "http"
- "https"
paths:
  /contributions:
    get:
      tags:
      - Contributions
      summary: "Return all the contributions. They can be filtered"
      operationId: getAllContributions
      produces:
      - application/json
      parameters:
      - in: query
        name: type
        required: false
        type: string
        enum: [ask, new]
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: '#/definitions/Contribution'
        400:
          description: "Invalid query"
          schema:
            $ref: '#/definitions/Message'
        401:
          description: "Not authorized"
          schema:
            $ref: '#/definitions/Message'
      security:
      - api_key: []
    post:
      tags:
      - Contributions
      summary: "Create a new contribution"
      operationId: createContribution
      produces:
      - application/json
      parameters:
      - name: body
        in: body
        schema:
          $ref: "#/definitions/ContributionBody"
      responses:
        201:
          description: "Successfully created"
          schema:
            $ref: '#/definitions/Contribution'
        400:
          description: "Bad Request"
          schema:
            $ref: '#/definitions/Message'
        401:
          description: "Not authorized"
          schema:
            $ref: '#/definitions/Message'
        409:
          description: "Contribution already exists"
          schema:
            $ref: '#/definitions/Message'
      security:
      - api_key: []
  /contributions/{id}:
    get:
      tags:
      - Contributions
      summary: "Return a contribution by Id."
      operationId: getContributionById
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        type: string
        required: true
        description: Id of the Contribution
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: '#/definitions/Contribution'
        401:
          description: "Not authorized"
          schema:
            $ref: '#/definitions/Message'
        404:
          description: "Contribution not found"
          schema:
            $ref: '#/definitions/Message'
      security:
      - api_key: []
    put:
      tags:
      - Contributions
      summary: "Update a contribution"
      operationId: updateContribution
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        type: string
        required: true
        description: Id of the Contribution
      - name: body
        in: body
        schema:
          $ref: "#/definitions/UpdateContributionBody"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: '#/definitions/Contribution'
        404:
          description: "Contribution not found"
          schema:
            $ref: '#/definitions/Message'
        401:
          description: "Not authorized"
          schema:
            $ref: '#/definitions/Message'
      security:
      - api_key: []
    delete:
      tags:
      - Contributions
      summary: "Delete a contribution"
      operationId: deleteContribution
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        type: string
        required: true
        description: Id of the Contribution
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: '#/definitions/Message'
        401:
          description: "Not authorized"
          schema:
            $ref: '#/definitions/Message'
        404:
          description: "Contribution not found"
          schema:
            $ref: '#/definitions/Message'
      security:
      - api_key: []
  /users/{id}:
    get:
      tags:
      - Users
      summary: "Return a user"
      operationId: getUser
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        type: string
        required: true
        description: Id of the Users
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: '#/definitions/User'
        400:
          description: "Invalid query"
          schema:
            $ref: '#/definitions/Message'
        401:
          description: "Not authorized"
          schema:
            $ref: '#/definitions/Message'
      security:
      - api_key: []
    put:
      tags:
      - Users
      summary: "Update a user"
      operationId: updateUser
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        type: string
        required: true
        description: Id of the User
      - name: body
        in: body
        schema:
          $ref: "#/definitions/UpdateUserBody"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: '#/definitions/Contribution'
        404:
          description: "User not found"
          schema:
            $ref: '#/definitions/Message'
        401:
          description: "Not authorized"
          schema:
            $ref: '#/definitions/Message'
      security:
      - api_key: []
  /contributions/{contribution_id}/comments:
    get:
      tags:
      - Comments
      summary: "Return all the comments from a contribution."
      operationId: getCommetsfromContributions
      produces:
      - application/json
      parameters:
      - name: contribution_id
        in: path
        type: string
        required: true
        description: Id of the Contribution
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Comment"
        401:
          description: "Not authorized"
          schema:
            $ref: '#/definitions/Message'
        404:
          description: "Contribution not found"
          schema:
            $ref: '#/definitions/Message'
      security:
      - api_key: []
  /contributions/{contribution_id}/comments/{comment_id}:
    get:
      tags:
      - Comments
      summary: "Return a comment from a contribution."
      operationId: getCommetfromContribution
      produces:
      - application/json
      parameters:
      - name: contribution_id
        in: path
        type: string
        required: true
        description: Id of the Contribution
      - name: comment_id
        in: path
        type: string
        required: true
        description: Id of the Comment
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Comment"
        401:
          description: "Not authorized"
          schema:
            $ref: '#/definitions/Message'
        404:
          description: "Contribution not found"
          schema:
            $ref: '#/definitions/Message'
      security:
      - api_key: []
securityDefinitions:
  api_key:
    type: apiKey
    name: Authorization
    in: header
definitions:
  ContributionBody:
    type: "object"
    properties:
      title:
        type: "string"
      text:
        type: "string"
      url:
        type: "string"
  UpdateContributionBody:
    type: "object"
    properties:
      title:
        type: "string"
      url:
        type: "string"
      text:
        type: "string"
  UpdateUserBody:
    type: "object"
    properties:
      name:
        type: "string"
      email:
        type: "string"
      about:
        type: "string"
  Contribution:
    type: "object"
    properties:
      id:
        type: "number"
      title:
        type: "string"
      url:
        type: "string"
      text:
        type: "string"
      username:
        type: "string"
      createdAt:
        type: "string"
      numComments:
        type: "number"
        default: 0
      points:
        type: "number"
    xml:
      name: "Contribution"
  User:
    type: "object"
    properties:
      id:
        type: "number"
      name:
        type: "string"
      email:
        type: "string"
      about:
        type: "string"
      createdAt:
        type: "string"
      api-key:
        type: "string"
  Message:
    type: "object"
    properties:
      message:
        type: "string"
  Comment: 
    type: "object"
    properties:
      id:
        type: "string"
        description: "A definir el objeto comment"
      content:
        type: "string"